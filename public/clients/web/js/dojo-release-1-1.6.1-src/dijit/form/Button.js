define("dijit/form/Button",["dojo","dijit","text!dijit/form/templates/Button.html","text!dijit/form/templates/DropDownButton.html","text!dijit/form/templates/ComboButton.html","dijit/form/_FormWidget","dijit/_Container","dijit/_HasDropDown"],function(a,b){a.declare("dijit.form.Button",b.form._FormWidget,{label:"",showLabel:!0,iconClass:"",type:"button",baseClass:"dijitButton",templateString:a.cache("dijit.form","templates/Button.html"),attributeMap:a.delegate(b.form._FormWidget.prototype.attributeMap,{value:"valueNode"}),_onClick:function(a){if(this.disabled)return!1;this._clicked();return this.onClick(a)},_onButtonClick:function(a){if(this._onClick(a)===!1)a.preventDefault();else if(this.type!="submit"||(this.valueNode||this.focusNode).form)this.valueNode&&(this.valueNode.click(),a.preventDefault());else for(var c=this.domNode;c.parentNode;c=c.parentNode){var d=b.byNode(c);if(d&&typeof d._onSubmit=="function"){d._onSubmit(a);break}}},buildRendering:function(){this.inherited(arguments),a.setSelectable(this.focusNode,!1)},_fillContent:function(a){a&&(!this.params||!("label"in this.params))&&this.set("label",a.innerHTML)},_setShowLabelAttr:function(b){this.containerNode&&a.toggleClass(this.containerNode,"dijitDisplayNone",!b),this._set("showLabel",b)},onClick:function(a){return!0},_clicked:function(a){},setLabel:function(b){a.deprecated("dijit.form.Button.setLabel() is deprecated.  Use set('label', ...) instead.","","2.0"),this.set("label",b)},_setLabelAttr:function(b){this._set("label",b),this.containerNode.innerHTML=b,this.showLabel==!1&&!this.params.title&&(this.titleNode.title=a.trim(this.containerNode.innerText||this.containerNode.textContent||""))},_setIconClassAttr:function(b){var c=this.iconClass||"dijitNoIcon",d=b||"dijitNoIcon";a.replaceClass(this.iconNode,d,c),this._set("iconClass",b)}}),a.declare("dijit.form.DropDownButton",[b.form.Button,b._Container,b._HasDropDown],{baseClass:"dijitDropDownButton",templateString:a.cache("dijit.form","templates/DropDownButton.html"),_fillContent:function(){if(this.srcNodeRef){var c=a.query("*",this.srcNodeRef);b.form.DropDownButton.superclass._fillContent.call(this,c[0]),this.dropDownContainer=this.srcNodeRef}},startup:function(){if(!this._started){if(!this.dropDown&&this.dropDownContainer){var c=a.query("[widgetId]",this.dropDownContainer)[0];this.dropDown=b.byNode(c),delete this.dropDownContainer}this.dropDown&&b.popup.hide(this.dropDown),this.inherited(arguments)}},isLoaded:function(){var a=this.dropDown;return!!a&&(!a.href||a.isLoaded)},loadDropDown:function(){var b=this.dropDown;if(b)if(this.isLoaded())this.openDropDown();else{var c=a.connect(b,"onLoad",this,function(){a.disconnect(c),this.openDropDown()});b.refresh()}},isFocusable:function(){return this.inherited(arguments)&&!this._mouseDown}}),a.declare("dijit.form.ComboButton",b.form.DropDownButton,{templateString:a.cache("dijit.form","templates/ComboButton.html"),attributeMap:a.mixin(a.clone(b.form.Button.prototype.attributeMap),{id:"",tabIndex:["focusNode","titleNode"],title:"titleNode"}),optionsTitle:"",baseClass:"dijitComboButton",cssStateNodes:{buttonNode:"dijitButtonNode",titleNode:"dijitButtonContents",_popupStateNode:"dijitDownArrowButton"},_focusedNode:null,_onButtonKeyPress:function(c){c.charOrCode==a.keys[this.isLeftToRight()?"RIGHT_ARROW":"LEFT_ARROW"]&&(b.focus(this._popupStateNode),a.stopEvent(c))},_onArrowKeyPress:function(c){c.charOrCode==a.keys[this.isLeftToRight()?"LEFT_ARROW":"RIGHT_ARROW"]&&(b.focus(this.titleNode),a.stopEvent(c))},focus:function(a){this.disabled||b.focus(a=="start"?this.titleNode:this._popupStateNode)}}),a.declare("dijit.form.ToggleButton",b.form.Button,{baseClass:"dijitToggleButton",checked:!1,attributeMap:a.mixin(a.clone(b.form.Button.prototype.attributeMap),{checked:"focusNode"}),_clicked:function(a){this.set("checked",!this.checked)},_setCheckedAttr:function(c,d){this._set("checked",c),a.attr(this.focusNode||this.domNode,"checked",c),b.setWaiState(this.focusNode||this.domNode,"pressed",c),this._handleOnChange(c,d)},setChecked:function(b){a.deprecated("setChecked("+b+") is deprecated. Use set('checked',"+b+") instead.","","2.0"),this.set("checked",b)},reset:function(){this._hasBeenBlurred=!1,this.set("checked",this.params.checked||!1)}});return b.form.Button})