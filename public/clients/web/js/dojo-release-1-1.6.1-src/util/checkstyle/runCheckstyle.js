function runCommit(){var a=["dojo","dijit","dojox"],b=[];for(var c=0;c<a.length;c++){var d=fileUtil.getFilteredFileList("../../"+a[c],/\.checkstyle.js$/,!0);for(var e=0;e<d.length;e++)if(d[e].indexOf("/test")<0&&d[e].indexOf("/nls")<0&&d[e].indexOf("/demos")<0){var f=d[e].substring(0,d[e].length-".checkstyle.js".length);fileUtil.saveUtf8File(f,fileUtil.readFile(d[e])),fileUtil.deleteFile(d[e]),b.push(f)}}print("Committed checkstyle fixes for the following files:\n"+b.join("\n"))}function checkstyle(){var a,b,c,d="./checkstyleData.js";if(kwArgs.files){var e=kwArgs.files.split(" ");for(b=0;b<e.length;b++)checkstyleUtil.applyRules("../../"+e[b],fileUtil.readFile("../../"+e[b]));if(checkstyleUtil.errors){var f=checkstyleUtil.serializeErrors();if(kwArgs.failOnError=="true")throw Error("Checkstyle failed. \n"+f);print(f)}}else{kwArgs.dir?a=[kwArgs.dir]:a=["dojo","dijit","dojox"],kwArgs.ignoreDirs?c=kwArgs.ignoreDirs.split(","):c=[];for(b=0;b<a.length;b++){var g=fileUtil.getFilteredFileList("../../"+a[b],/\.js$/,!0);for(var h=0;h<g.length;h++)if(g[h].indexOf("/test")<0&&g[h].indexOf("/nls")<0&&g[h].indexOf("/demos")<0){var i=!1;if(c.length>0)for(var j=0;j<c.length;j++)if(g[h].indexOf(c[j])>-1){i=!0;break}i||checkstyleUtil.applyRules(g[h],fileUtil.readFile(g[h]))}}var k=checkstyleUtil.generateReport();fileUtil.saveUtf8File(d,k)}}var buildTimerStart=(new Date).getTime();load("../buildscripts/jslib/logger.js"),load("../buildscripts/jslib/fileUtil.js"),load("../buildscripts/jslib/buildUtil.js"),load("checkstyleUtil.js");if(arguments[0]=="help")print("Usage: \n\tTo generate a HTML report on dojo, dijit and dojox folders use:\n\t\tcheckstyle \n\tTo specify a single directory to check in, including all child folders, use:\n\t\tcheckstyle dir={folderName}\n\tTo specify directories to ignore, use:\n\t\tcheckstyle ignoreDirs={folderName1},{folderName2}\n\tTo specify a list of files to process, use the 'files' parameter, passing a list of space separated files, e.g.\n\t\tcheckstyle files=\"dojo/_base/Color.js dojo/back.js\"\n\tTo force the script to fail when a specified file has failed the check, use the 'failOnError' parameter, e.g.\n\t\tcheckstyle failOnError=true files=\"dojo/_base/Color.js dojo/back.js\"\n\tTo commit fixes made by the checkstyleReport.html tool, use\n\t\tcheckstyle commit");else if(arguments[0]=="commit")runCommit();else{var kwArgs=buildUtil.makeBuildOptions(arguments);checkstyle();var buildTime=((new Date).getTime()-buildTimerStart)/1e3;print("Build time: "+buildTime+" seconds")}