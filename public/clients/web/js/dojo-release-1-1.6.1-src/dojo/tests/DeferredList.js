dojo.provide("tests.DeferredList"),dojo.require("dojo.DeferredList"),doh.register("tests.DeferredList",[function callback(a){var b=new dojo.Deferred,c=new dojo.Deferred,d=new dojo.DeferredList([b,c]),e=!1;d.addCallback(function(a){doh.debug("debug from dojo.DeferredList callback");return a}),d.addCallback(function(b){console.log("res: ",b,b.length),a.assertTrue(b.length==2),a.assertTrue(b[0][0]),a.assertEqual(b[0][1],"foo"),a.assertTrue(b[1][0]),a.assertEqual(b[1][1],"bar"),e=!0;return b}),b.callback("foo"),c.callback("bar"),a.assertTrue(e)},function errback(a){var b=new dojo.Deferred,c=new dojo.Deferred,d=new dojo.DeferredList([b,c]),e=!1,f=new Error("foo"),g=new Error("bar");d.addCallback(function(a){doh.debug("debug from dojo.DeferredList callback");return a}),d.addCallback(function(b){a.assertTrue(b.length==2),a.assertTrue(!b[0][0]),a.assertEqual(b[0][1],f),a.assertTrue(!b[1][0]),a.assertEqual(b[1][1],g),e=!0;return b}),b.errback(f),c.errback(g),a.assertTrue(e)},function mixed(a){var b=new dojo.Deferred,c=new dojo.Deferred,d=new dojo.DeferredList([b,c]),e=!1,f=new Error("foo");d.addCallback(function(a){doh.debug("debug from dojo.DeferredList callback");return a}),d.addCallback(function(b){a.assertTrue(b.length==2),a.assertTrue(!b[0][0]),a.assertEqual(b[0][1],f),a.assertTrue(b[1][0]),a.assertEqual(b[1][1],"bar"),e=!0;return b}),b.errback(f),c.callback("bar"),a.assertTrue(e)},function gather(a){var b=new dojo.Deferred,c=new dojo.Deferred,d=dojo.DeferredList.prototype.gatherResults([b,c]),e=!1;d.addCallback(function(b){a.assertEqual(b[0],"foo"),a.assertEqual(b[1],"bar"),e=!0;return b}),b.callback("foo"),c.callback("bar"),a.assertTrue(e)}]),dojo.provide("tests.DeferredList"),dojo.require("dojo.DeferredList"),doh.register("tests.DeferredList",[function callback(a){var b=new dojo.Deferred,c=new dojo.Deferred,d=new dojo.DeferredList([b,c]),e=!1;d.addCallback(function(a){doh.debug("debug from dojo.DeferredList callback");return a}),d.addCallback(function(b){a.assertTrue(b.length==2),a.assertTrue(b[0][0]),a.assertEqual(b[0][1],"foo"),a.assertTrue(b[1][0]),a.assertEqual(b[1][1],"bar"),e=!0;return b}),b.callback("foo"),c.callback("bar"),a.assertTrue(e)},function errback(a){var b=new dojo.Deferred,c=new dojo.Deferred,d=new dojo.DeferredList([b,c]),e=!1,f=new Error("foo"),g=new Error("bar");d.addCallback(function(a){doh.debug("debug from dojo.DeferredList callback");return a}),d.addCallback(function(b){a.assertTrue(b.length==2),a.assertTrue(!b[0][0]),a.assertEqual(b[0][1],f),a.assertTrue(!b[1][0]),a.assertEqual(b[1][1],g),e=!0;return b}),b.errback(f),c.errback(g),a.assertTrue(e)},function mixed(a){var b=new dojo.Deferred,c=new dojo.Deferred,d=new dojo.DeferredList([b,c]),e=!1,f=new Error("foo");d.addCallback(function(a){doh.debug("debug from dojo.DeferredList callback");return a}),d.addCallback(function(b){a.assertTrue(b.length==2),a.assertTrue(!b[0][0]),a.assertEqual(b[0][1],f),a.assertTrue(b[1][0]),a.assertEqual(b[1][1],"bar"),e=!0;return b}),b.errback(f),c.callback("bar"),a.assertTrue(e)},function gather(a){var b=new dojo.Deferred,c=new dojo.Deferred,d=dojo.DeferredList.prototype.gatherResults([b,c]),e=!1;d.addCallback(function(b){a.assertEqual(b[0],"foo"),a.assertEqual(b[1],"bar"),e=!0;return b}),b.callback("foo"),c.callback("bar"),a.assertTrue(e)}])